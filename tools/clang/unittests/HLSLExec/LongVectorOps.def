//
//
//

#ifndef INPUT_SET
#define INPUT_SET(SYMBOL, NAME)
#endif

INPUT_SET(Default1, "DefaultInputValueSet1")
INPUT_SET(Default2, "DefaultInputValueSet2")
INPUT_SET(Default3, "DefaultInputValueSet3")
INPUT_SET(SmoothStepMin, "SmoothStepMin")
INPUT_SET(SmoothStepMax, "SmoothStepMax")
INPUT_SET(SmoothStepInput, "SmoothStepInputValueSet")
INPUT_SET(RangeOne, "TrigonometricInputValueSet_RangeOne")
INPUT_SET(RangeHalfPi, "TrigonometricInputValueSet_RangeHalfPi")
INPUT_SET(SplitDouble, "SplitDoubleInputValueSet")

#undef INPUT_SET

#ifndef OP
#define OP(GROUP, SYMBOL, ARITY, INTRINSIC, OPERATOR, INPUT_SET_1,             \
           INPUT_SET_2, INPUT_SET_3)
#endif

#define OP_DEFAULT(GROUP, SYMBOL, ARITY, INTRINSIC, OPERATOR)                  \
  OP(GROUP, SYMBOL, ARITY, INTRINSIC, OPERATOR, Default1, Default2, Default3)

OP_DEFAULT(TernaryMath, Mad, 3, "mad", "")
OP(TernaryMath, SmoothStep, 3, "smoothstep", "", SmoothStepMin, SmoothStepMin,
   SmoothStepMin)
OP_DEFAULT(TernaryMath, Fma, 3, "fma", "")

OP_DEFAULT(BinaryMath, Add, 2, "", "+")
OP_DEFAULT(BinaryMath, Subtract, 2, "", "-")
OP_DEFAULT(BinaryMath, Multiply, 2, "", "*")
OP_DEFAULT(BinaryMath, Divide, 2, "", "/")
OP_DEFAULT(BinaryMath, Modulus, 2, "", "%")
OP_DEFAULT(BinaryMath, Min, 2, "min", ",")
OP_DEFAULT(BinaryMath, Max, 2, "max", ",")
OP_DEFAULT(BinaryMath, Ldexp, 2, "ldexp", ",")

OP_DEFAULT(Unary, Initialize, 1, "TestInitialize", "")

OP(Trigonometric, Acos, 1, "acos", "", RangeOne, RangeOne, RangeOne)
OP(Trigonometric, Asin, 1, "asin", "", RangeHalfPi, RangeHalfPi, RangeHalfPi)
OP(Trigonometric, Atan, 1, "atan", "", RangeHalfPi, RangeHalfPi, RangeHalfPi)
OP_DEFAULT(Trigonometric, Cos, 1, "cos", "")
OP_DEFAULT(Trigonometric, Cosh, 1, "cosh", "")
OP_DEFAULT(Trigonometric, Sin, 1, "sin", "")
OP_DEFAULT(Trigonometric, Sinh, 1, "sinh", "")
OP_DEFAULT(Trigonometric, Tan, 1, "tan", "")
OP_DEFAULT(Trigonometric, Tanh, 1, "tanh", "")

OP_DEFAULT(AsType, AsFloat16, 1, "asfloat16", "")
OP_DEFAULT(AsType, AsInt16, 1, "asint16", "")
OP_DEFAULT(AsType, AsUint16, 1, "asuin16", "")
OP_DEFAULT(AsType, AsFloat, 1, "asfloat", "")
OP_DEFAULT(AsType, AsInt, 1, "asint", "")
OP_DEFAULT(AsType, AsUint, 1, "asuint", "")
OP_DEFAULT(AsType, AsDouble, 2, "asdouble", ",")
OP(AsType, AsUint_SplitDouble, 1, "TestAsUintSplitDouble", "", SplitDouble,
   SplitDouble, SplitDouble)

OP_DEFAULT(UnaryMath, Abs, 1, "abs", "")
OP_DEFAULT(UnaryMath, Sign, 1, "sign", "")
OP_DEFAULT(UnaryMath, Ceil, 1, "ceil", "")
OP_DEFAULT(UnaryMath, Exp, 1, "exp", "")
OP_DEFAULT(UnaryMath, Floor, 1, "floor", "")
OP_DEFAULT(UnaryMath, Frac, 1, "frac", "")
OP_DEFAULT(UnaryMath, Log, 1, "log", "")
OP_DEFAULT(UnaryMath, Rcp, 1, "rcp", "")
OP_DEFAULT(UnaryMath, Round, 1, "round", "")
OP_DEFAULT(UnaryMath, Rsqrt, 1, "rsqrt", "")
OP_DEFAULT(UnaryMath, Sqrt, 1, "sqrt", "")
OP_DEFAULT(UnaryMath, Trunc, 1, "trunc", "")
OP_DEFAULT(UnaryMath, Exp2, 1, "exp2", "")
OP_DEFAULT(UnaryMath, Log10, 1, "log10", "")
OP_DEFAULT(UnaryMath, Log2, 1, "log2", "")
OP_DEFAULT(UnaryMath, Frexp, 1, "TestFrexp", "")

#undef OP